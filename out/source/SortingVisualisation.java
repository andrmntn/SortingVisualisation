/* autogenerated by Processing revision 1277 on 2021-10-17 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class SortingVisualisation extends PApplet {


float[] values;

int i = 0;
int j = 0;

 public void setup() {
    /* size commented out by preprocessor */;
    values = new float[width];
    for (int i = 0; i < values.length; i++) {
        values[i] = random(height);
    }
}

 public void draw() {
    background(0);
    
    
    
    if (i < values.length) {
        
        for (int j = 0; j < values.length - i - 1;j++) {
            float a = values[j];
            float b = values[j + 1];
            if (a > b) {
                swap(values, j, j + 1);
            }
        }

    } else {
        println("finished");
        noLoop();
    }
    
    
    for (int i = 0; i < values.length;i++) {
        stroke(255);
        line(i, height, i , height - values[i]);
        
    }
}

 public void swap(float[] arr, int a, int b) {
    float tmp = arr[a];
    arr[a] = arr[b];
    arr[b] = tmp;
}


  public void settings() { size(400, 300); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "SortingVisualisation" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
